import org.json.JSONObject;
import org.json.JSONTokener;
import java.io.*;
import java.util.*;

public class PTEParametersCSVGenerator {
    public static void main(String[] args) {
        String inputPath = "path/to/your/config.json";
        String outputPath = "pte_parameters.csv";
        
        try {
            // Read and parse the JSON file
            FileReader reader = new FileReader(inputPath);
            JSONObject rootObject = new JSONObject(new JSONTokener(reader));
            
            // Store all parameters and their values
            Map<String, Map<String, String>> serviceParameters = new HashMap<>();
            Set<String> allParameterNames = new TreeSet<>(); // Using TreeSet for sorted column names
            
            // Extract data
            Iterator<String> serviceKeys = rootObject.keys();
            while (serviceKeys.hasNext()) {
                String serviceName = serviceKeys.next();
                JSONObject service = rootObject.getJSONObject(serviceName);
                
                Iterator<String> envKeys = service.keys();
                while (envKeys.hasNext()) {
                    String envName = envKeys.next();
                    if (envName.equals("PTE")) {
                        JSONObject envObject = service.getJSONObject(envName);
                        String ecsKey = envObject.keys().next();
                        JSONObject ecsObject = envObject.getJSONObject(ecsKey);
                        
                        if (ecsObject.has("parameters")) {
                            JSONObject parameters = ecsObject.getJSONObject("parameters");
                            Map<String, String> paramMap = new HashMap<>();
                            
                            Iterator<String> paramKeys = parameters.keys();
                            while (paramKeys.hasNext()) {
                                String paramName = paramKeys.next();
                                String paramValue = parameters.getString(paramName);
                                paramMap.put(paramName, paramValue);
                                allParameterNames.add(paramName);
                            }
                            
                            serviceParameters.put(serviceName, paramMap);
                        }
                    }
                }
            }
            
            // Write to CSV
            FileWriter csvWriter = new FileWriter(outputPath);
            
            // Write header
            csvWriter.append("Service");
            for (String paramName : allParameterNames) {
                csvWriter.append(",").append(paramName);
            }
            csvWriter.append("\n");
            
            // Write data
            for (Map.Entry<String, Map<String, String>> entry : serviceParameters.entrySet()) {
                csvWriter.append(entry.getKey());
                
                for (String paramName : allParameterNames) {
                    csvWriter.append(",");
                    String value = entry.getValue().getOrDefault(paramName, "");
                    // Escape special characters if needed
                    if (value.contains(",") || value.contains("\"") || value.contains("\n")) {
                        value = "\"" + value.replace("\"", "\"\"") + "\"";
                    }
                    csvWriter.append(value);
                }
                csvWriter.append("\n");
            }
            
            // Close resources
            csvWriter.flush();
            csvWriter.close();
            reader.close();
            
            System.out.println("CSV file has been created successfully at: " + outputPath);
            System.out.println("Total services processed: " + serviceParameters.size());
            System.out.println("Total parameters found: " + allParameterNames.size());
            
        } catch (Exception e) {
            System.out.println("Error processing JSON or writing CSV: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
